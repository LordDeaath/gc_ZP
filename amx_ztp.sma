/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <zp50_random_spawn>
#include <colorchat>
#include <engine>

#define PLUGIN "Teleport back"
#define VERSION "1.0"
#define AUTHOR "Administrator"

new iZtps[33], iNoDonkey[33];
new Float:iLast[33];

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_clcmd("say /imnotdonkey","func_ImNotDonkey")	
	register_clcmd("say /ztp","func_ztp")
	register_event("HLTV", "Event_NewRound", "a", "1=0", "2=0")
}
public Event_NewRound()
{
	for(new id = 1;id <= 32;id++)
		iZtps[id] = 0
}
public client_connectex(id)
{
	iNoDonkey[id] = 0
}
public client_PreThink(id)
{
	if(!is_user_alive(id))
		return
	if(zp_core_is_zombie(id))
		return
	if(iNoDonkey[id])
		return
	new iAdd[20],pAdd[20],pNick[32]
	get_user_ip(id,iAdd,charsmax(iAdd),1)
	new Float:CurrTime = get_gametime()
	if(CurrTime - iLast[id] <= 2.5)
		return
	
	for(new pl=1;pl <= 32;pl++)
	{
		if(!is_user_alive(pl))
			continue
		get_user_ip(pl,pAdd,charsmax(pAdd),1)
		if(!equal(iAdd,pAdd))
			continue	
		if(entity_range(pl,id) >= 512)
			continue
		if(iNoDonkey[pl])
			continue
		if(!zp_core_is_zombie(pl))
			continue
		get_user_name(pl,pNick,charsmax(pNick))
		zp_random_spawn_do(pl,false)
		console_print(0," %s was automatically teleported back to spawn to avoid teaming", pNick)
		ColorChat(pl, GREEN,"[GC]^3 Don't protect your friend.^4 say /imnotdonkey^3 to disable ^4Auto TP")
	}
	iLast[id] = get_gametime()
}
public func_ImNotDonkey(id)
{
	iNoDonkey[id] = 1
	ColorChat(id, GREEN,"[GC] You will no longer TP back near players with same IP")
	return PLUGIN_HANDLED;
}
public func_ztp(id)
{
	if(!zp_core_is_zombie(id))
	{
		ColorChat(id, GREEN,"[GC] You can only TP back in as a Zombie")
		return PLUGIN_HANDLED;
	}
	if(iZtps[id] >= 3)
	{
		ColorChat(id, GREEN,"[GC] You can only TP back 3 times every round")
		return PLUGIN_HANDLED;
	}	
	iZtps[id]++
	zp_random_spawn_do(id,false)
	return PLUGIN_HANDLED;

}