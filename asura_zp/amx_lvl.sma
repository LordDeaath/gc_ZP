/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <colorchat>
#include <zp50_core>
#include <cs_maxspeed_api>
#include <fun>
#include <hamsandwich>
#include <engine>
#include <sqlx> 
#include <zp50_gamemodes>

#define PLUGIN "lvls"
#define VERSION "1.0"
#define AUTHOR "Lord. Death."

//  Mysql Information
new Host[]     = "62.108.35.183"
new User[]    = "bloodypro"
new Pass[]     = "uFk%0iPldv#$"
new Db[]     = "zp_stats"

new g_szMotd[1536]

new iLvl[33], iXp[33], iPoints[33], iHealth[33], pDamage[33], iRankPoints[33], iInfs[33],iKills[33], iRank[33]//, iCount
new Float:iDamage[33]
new bool:Loaded[33]
new Float:iSpeed[33]
new Float:iGravity[33]
new Handle:g_SqlTuple
new g_Error[512], szSteamId[34], cvar_Count, cvar_rank
public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_clcmd("say /lvl","iLvlShop")
	register_clcmd("say /top", "TopSkill")
	register_clcmd("say /top15", "TopSkill")
	register_clcmd("say /rank", "pRank") 
	//register_clcmd("say /tops", "Tops")//Tops
	register_concmd("lvl","iLvlShop")
	cvar_Count = register_cvar("zp_xp_min_players", "5")
	cvar_rank = register_cvar("zp_rank_on", "0")
	RegisterHam(Ham_TakeDamage,"player","fw_takedamage")
	set_task(2.0,"MySql_Init")
}
public MySql_Init()
{
	g_SqlTuple = SQL_MakeDbTuple(Host,User,Pass,Db)
   
	new ErrorCode,Handle:SqlConnection = SQL_Connect(g_SqlTuple,ErrorCode,g_Error,charsmax(g_Error))
	if(SqlConnection == Empty_Handle)
		set_fail_state(g_Error)
       
	new Handle:Queries
	Queries = SQL_PrepareQuery(SqlConnection,"CREATE TABLE IF NOT EXISTS lvl_data (steamid varchar(32), nick varchar(32),lvl INT(11), xp INT(11),\
	points INT(11), health INT(11), dmg FLOAT(6), speed FLOAT(6), grav FLOAT(6), rank_points int(11), kills int(11), infects int(11))")
	if(!SQL_Execute(Queries))
	{
		SQL_QueryError(Queries,g_Error,charsmax(g_Error))
		set_fail_state(g_Error)
       
	}
    
	SQL_FreeHandle(Queries)
   
	SQL_FreeHandle(SqlConnection)
	MakeTop15( )
}
public register_client(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
{
	if(FailState == TQUERY_CONNECT_FAILED)
		log_amx("Load - Could not connect to SQL database.  [%d] %s", Errcode, Error)
	else if(FailState == TQUERY_QUERY_FAILED)
		log_amx("Load Query failed. [%d] %s", Errcode, Error)

	new id
	id = Data[0]
    
	if(!is_user_connected(id))
		return;
	
	if(SQL_NumResults(Query) < 1) 
	{
	//.if there are no results found
        
		new szSteamId[32], iPlayerNick[32]
		get_user_authid(id, szSteamId, charsmax(szSteamId)) // get user's steamid
		get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
		if (equal(szSteamId,"ID_PENDING"))
			return;
            
		new szTemp[512]
        
		// now we will insturt the values into our table.
		format(szTemp,charsmax(szTemp),"INSERT INTO `lvl_data` ( `steamid` , `nick` , `lvl` , `xp` , `points` , `health` , `dmg` , `speed` , `grav` , `rank_points` , `kills` , `infects` )\
		VALUES ('%s', '%s' ,'0' , '0' , '0' , '%i' , '%2.2f' , '%2.2f' , '%2.3f' , '0' , '0' , '0');", szSteamId, iPlayerNick, iHealth[id], iDamage[id], iSpeed[id], iGravity[id])
		SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
	} 
	else 
	{
		if(is_user_bot(id))
			return;
		// if there are results found
		new szTxt[512], szSteamId[32], iPlayerNick[32]
		get_user_authid(id, szSteamId, charsmax(szSteamId)) // get user's steamid
		get_user_name(id, iPlayerNick, charsmax(iPlayerNick))	
		iLvl[id] = SQL_ReadResult(Query, 2)
		iXp[id] = SQL_ReadResult(Query, 3)
		iPoints[id] = SQL_ReadResult(Query, 4)
		iHealth[id] = SQL_ReadResult(Query, 5)
		SQL_ReadResult(Query, 6, iDamage[id])
		SQL_ReadResult(Query, 7, iSpeed[id])
		SQL_ReadResult(Query, 8, iGravity[id])
		iRankPoints[id] = SQL_ReadResult(Query, 9)
		iKills[id] = SQL_ReadResult(Query, 10)
		iInfs[id] = SQL_ReadResult(Query, 11)
		
		if(iGravity[id] >= 0.75)
			iGravity[id] = 0.75
		format(szTxt, charsmax(szTxt), "Load: Nick: %s | ID: %s | LVL: %d | XP: %d | Pts: %d | HP: %d | DMG: %2.3f | Speed: %2.3f | Grav: %2.3f", iPlayerNick, szSteamId, iLvl[id], iXp[id], iPoints[id], iHealth[id], iDamage[id], iSpeed[id], iGravity[id])
		LogData(szTxt)
		format(szTxt, charsmax(szTxt), "LoadRank: Nick: %s | ID: %s | Rank Points: %d | Kills : %d | Infs: %d", iPlayerNick, szSteamId, iRankPoints[id], iKills[id], iInfs[id])
		LogData(szTxt)
		Loaded[id]=true;
	}
} 
///////////////
///RANK
///////////////
public pRank(id)
{
	if(iLvl[id] < 2)
	{
		ColorChat(id, GREEN, "[GC]^3 You are currently ^4unranked^1.^3 To get ranked you have to be ^4level 2^3 or higher")
		return;
	}
	new Data[ 1 ]
	Data[ 0 ] = id
		
	new szTemp[ 512 ]
	format( szTemp, charsmax( szTemp ), "SELECT COUNT(*) FROM lvl_data WHERE rank_points >= %i", iRankPoints[ id ] )
		
	SQL_ThreadQuery( g_SqlTuple, "SkillRank_QueryHandler", szTemp, Data, 1 )
}
public SkillRank_QueryHandler( FailState, Handle:Query, Error[ ], Errcode, Data[ ], DataSize )
{
	if( !SQL_IsFail( FailState, Errcode, Error ) )
	{
		new id
		id = Data[ 0 ]
		
		iRank[ id ] = SQL_ReadResult( Query, 0 )
		
		if( iRank[ id ] == 0 )
		{
			iRank[ id ] = 1
		}
		
		TotalRows( id )
	}
}

public TotalRows( id )
{
	new Data[ 1 ]
	Data[ 0 ] = id
	
	new szTemp[ 128 ]
	format( szTemp, charsmax( szTemp ), "SELECT COUNT(*) FROM lvl_data")
	
	SQL_ThreadQuery( g_SqlTuple, "TotalRows_QueryHandler", szTemp, Data, 1 )
}

public TotalRows_QueryHandler( FailState, Handle:Query, Error[ ], Errcode, Data[ ], DataSize )
{
	if( !SQL_IsFail( FailState, Errcode, Error ) )
	{
		new id
		id = Data[ 0 ]
		
		new iCount = SQL_ReadResult( Query, 0 )
		
		//ColorChat( id, GREEN, "[GC]^3 Your rank is^4 %i ^3with!t4^ %i ^3points ^1,^4 %i ^3Kills ^1,^4 %i^3 Infects  ", iRank[id], iRankPoints[id], iKills[id], iInfs[id])
		ColorChat(id, GREEN, "[GC]^3 Your rank is^4 %i / %i ^3with^4 %d ^3points ^1,^4 %d ^3Kills ^1,^4 %d^3 Infects", iRank[id], iCount, iRankPoints[id], iKills[id],iInfs[id])
	}
}
///////////
///TOP 10
///////////
public TopSkill(id)
{
	if(is_user_connected(id))
		show_motd( id, g_szMotd, "Asura Zombie Plague" )
}
public Tops(id)
	ColorChat(id, GREEN,"%d", strlen(g_szMotd) )
public MakeTop15( )
{	
	new szQuery[ 512 ]
	if(get_pcvar_num(cvar_rank))
		formatex( szQuery, charsmax( szQuery ),
		"SELECT nick, rank_points, kills, infects, lvl, health , dmg , speed , grav , xp FROM lvl_data WHERE lvl > 1 ORDER BY rank_points DESC LIMIT 10")
	else
		formatex( szQuery, charsmax( szQuery ),
		"SELECT nick, rank_points, kills, infects, lvl, health , dmg , speed , grav , xp FROM lvl_data WHERE lvl > 1 ORDER BY lvl DESC LIMIT 10")
		
	SQL_ThreadQuery( g_SqlTuple, "MakeTop15_QueryHandler", szQuery )
}

public MakeTop15_QueryHandler( FailState, Handle:Query, Error[ ], Errcode, Data[ ], DataSize )
{
	if( !SQL_IsFail( FailState, Errcode, Error ) )
	{
		new szName[ 32 ]
		
		new Points,Kills,Infs,lvls,hp, my_xp
		new Float:dmg,Float:speed,Float:gravity, Float:stats[3]
		new iLen
		if(get_pcvar_num(cvar_rank))
			iLen = formatex( g_szMotd, charsmax( g_szMotd ),
			"<body bgcolor=#0000><table width=100%% cellpadding=10><tr bgcolor=#018481>\
			<th width=2%% colspan=^"11^"> Asura Top 10 Players Ranked By Points.")
		else
			iLen = formatex( g_szMotd, charsmax( g_szMotd ),
			"<body bgcolor=#0000><table width=100%% cellpadding=10><tr bgcolor=#018481>\
			<th width=2%% colspan=^"11^"> Asura Top 10 Players Ranked By Levels.")
			
		iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<tr bgcolor=#018481>")
		iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<td>Rank<td>Player\
		<td>Level\
		<td>Exp\
		<td>Points\
		<td>Kills\
		<td>Infects\
		<td>Health\
		<td>Damage\
		<td>Speed\
		<td>Gravity")
		
		new i = 1
		while( SQL_MoreResults( Query ) )
		{
			SQL_ReadResult( Query, 0, szName, charsmax( szName ) )
			//copy(szName, charsmax( szName ), "lol")
			Points = SQL_ReadResult( Query, 1 )
			Kills = SQL_ReadResult( Query, 2 )
			Infs = SQL_ReadResult( Query, 3 )
			lvls = SQL_ReadResult( Query, 4 )
			hp = SQL_ReadResult( Query, 5 ) + 100
			SQL_ReadResult( Query, 6, dmg )
			SQL_ReadResult( Query, 7, speed )
			SQL_ReadResult( Query, 8, gravity )
			my_xp = SQL_ReadResult( Query, 9 )
			stats[0] = dmg + 1.000
			stats[1] = speed + 1.000
			stats[2] = 1.000 - gravity
			replace_all( szName, charsmax( szName ), "<", "[" )
			replace_all( szName, charsmax( szName ), ">", "]" )
			switch(i)
			{
				case 1: iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<tr bgcolor=#FF0000>")
				case 2: iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<tr bgcolor=#FF6900>")
				case 3: iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<tr bgcolor=#FFD100>")
				default: iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<tr bgcolor=#016A84>")
			}
			iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<td>%d<td>%s",i,  szName)
			iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<td>%d<td>%d<td>%d<td>%d<td>%d<td>%d<td>%2.3f<td>%2.3f<td>%2.3f", lvls, my_xp, Points, Kills, Infs, hp,stats[0],stats[1],stats[2])
			//iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "<td align=center>%d<td align=center>%d<td align=center>%d<td align=center>%d<td align=center>%d | %2.3f | %2.3f | %2.3f", lvls, Points, Kills, Infs, hp,stats[0],stats[1],stats[2])

			i++
			SQL_NextRow( Query )
			
		}
		
		iLen += formatex( g_szMotd[ iLen ], charsmax( g_szMotd ) - iLen, "</table></body>" )
		//write_file("top.html",g_szMotd, 0)
	}
}


///////////
////Query Fail log
///////////
SQL_IsFail( FailState, Errcode, Error[ ] )
{
	if( FailState == TQUERY_CONNECT_FAILED )
	{
		log_amx( "[Error] Could not connect to SQL database: %s", Error )
		return true
	}
	
	if( FailState == TQUERY_QUERY_FAILED )
	{
		log_amx( "[Error] Query failed: %s", Error )
		return true
	}
	
	if( Errcode )
	{
		log_amx( "[Error] Error on query: %s", Error )
		return true
	}
	
	return false
}

/////////////////
///////////
////////////////
public Save_MySql(id)
{
	if(is_user_connected(id)&&Loaded[id])
	{
		if(is_user_bot(id))
			return;
			
		new iPlayerNick[32], szTemp[512], szTxt[512]
		get_user_authid(id, szSteamId, charsmax(szSteamId))
		get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
		format(szTxt, charsmax(szTxt), "Saved: Nick: %s | ID: %s | LVL: %d | XP: %d | Pts: %d | HP: %d | DMG: %2.3f | Speed: %2.3f | Grav: %2.3f", iPlayerNick, szSteamId, iLvl[id], iXp[id], iPoints[id], iHealth[id], iDamage[id], iSpeed[id], iGravity[id])
		format(szTemp,charsmax(szTemp),"UPDATE `lvl_data` SET `lvl` = '%i' , `xp` = '%i', `points` = '%i', `health` = '%i', `dmg` = '%2.3f' \
		, `speed` = '%2.3f', `grav` = '%2.3f', `rank_points` = '%i', `kills` = '%i', `infects` = '%i'  WHERE `lvl_data`.`steamid` = '%s'", iLvl[id], iXp[id], iPoints[id], iHealth[id], iDamage[id], iSpeed[id], iGravity[id], iRankPoints[id], iKills[id], iInfs[id], szSteamId)
		SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
		LogData(szTxt)
		format(szTxt, charsmax(szTxt), "SavedRank: Nick: %s | ID: %s | Rank Points: %d | Kills : %d | Infs: %d", iPlayerNick, szSteamId, iRankPoints[id], iKills[id], iInfs[id])
		LogData(szTxt)
	}
	
}
public Save_Data(id)
{
	static MyNick[32]
	get_user_name(id, MyNick, charsmax(MyNick))
	if(is_user_connected(id)&&Loaded[id])
	{
		new szTemp[512]
		get_user_authid(id, szSteamId, charsmax(szSteamId))
		format(szTemp,charsmax(szTemp),"UPDATE `lvl_data` SET `nick` = '%s', `lvl` = '%i', `xp` = '%i', `points` = '%i', `health` = '%i', `dmg` = '%2.3f', `speed` = '%2.3f', `grav` = '%2.3f'\
		, `rank_points` = '%i', `kills` = '%i', `infects` = '%i' WHERE `lvl_data`.`steamid` = '%s'",MyNick, iLvl[id], iXp[id], iPoints[id], iHealth[id], iDamage[id], iSpeed[id], iGravity[id], iRankPoints[id], iKills[id], iInfs[id], szSteamId)
		SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
	}
}
public Load_MySql(id)
{
	new szTemp[512], iPlayerNick[32]
	get_user_authid(id, szSteamId, charsmax(szSteamId))
	get_user_name(id, iPlayerNick, charsmax(iPlayerNick))

	new Data[1]
	Data[0] = id

	format(szTemp,charsmax(szTemp),"SELECT * FROM `lvl_data` WHERE (`lvl_data`.`steamid` = '%s')", szSteamId)
	SQL_ThreadQuery(g_SqlTuple,"register_client",szTemp,Data,1)
}
public plugin_end()
	SQL_FreeHandle(g_SqlTuple)
	
public IgnoreHandle(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
    SQL_FreeHandle(Query)

stock LogData(const message_fmt[], any:...)
{
	static message[256], filename[32], date[16];
	vformat(message, charsmax(message), message_fmt, 2);
	format_time(date, charsmax(date), "%Y%m%d");
	formatex(filename, charsmax(filename), "Levels_%s.log", date);
	log_to_file(filename, "%s", message);
}
public zp_fw_gamemodes_end(mod)
	MakeTop15( )
public client_putinserver(id)
	Load_MySql(id)
	
public client_disconnect(id)
{
	Save_MySql(id)
	Loaded[id]=false;
}
public plugin_natives()
{
	register_native("crxranks_get_user_level","rLVL", 1)
	register_native("crxranks_get_max_levels","rMaxLVL", 1)
	register_native("crxranks_get_user_xp","rXP", 1)
	register_native("crxranks_get_user_next_xp","rNxt_XP", 1)
	register_native("lvls_apply_stats","AddStats", 1)
	register_native("lvls_apply_zombi_stats","AddStatsZM", 1)
}
public rLVL(id)
	return iLvl[id]
	
public rMaxLVL(id)
{
	new iMax
	switch(iLvl[id])
	{
		case 0..100: iMax = 100
		default: iMax = iLvl[id]
	}
	return iMax;
}
public rXP(id)
	return iXp[id]

public rNxt_XP(id)
{
	new iNxtXP
	switch(iLvl[id])
	{
		case 0..5: iNxtXP = iLvl[id] * 100
		case 6..10: iNxtXP = iLvl[id] * 150
		case 11..15: iNxtXP = iLvl[id] * 200
		case 16..20: iNxtXP = iLvl[id] * 300
		case 21..30: iNxtXP = iLvl[id] * 400
		case 31..40: iNxtXP = iLvl[id] * 600
		case 41..50: iNxtXP = iLvl[id] * 1000
		case 51..60: iNxtXP =  iLvl[id] * 1500
		case 61..70: iNxtXP =  iLvl[id] * 2000
		case 71..80: iNxtXP =  iLvl[id] * 2500
		case 81..85: iNxtXP = iLvl[id] * 3000
		case 86..90: iNxtXP = iLvl[id] * 3500
		case 91..95: iNxtXP = iLvl[id] * 4000
		case 96..100: iNxtXP = iLvl[id] * 5000
		case 101..110: iNxtXP = iLvl[id] * 7500
		case 111..120: iNxtXP = iLvl[id] * 10000
		case 121..150: iNxtXP = iLvl[id] * 20000
		case 151..200: iNxtXP = iLvl[id] * 30000
		default: iNxtXP = iLvl[id] * 10000
	}
	return iNxtXP;
}

GetAliveCount()
{
	new iAlive, id
	for (id = 1; id <= get_maxplayers(); id++)
	{
		if (is_user_connected(id) && !is_user_bot(id))
			iAlive++
	}
	return iAlive;
}
	
public client_damage(Att,Vic,damage,wpnindex,hitplace,TA)
{
	if(!is_user_connected(Att))
		return;
	if(!is_user_connected(Vic))
		return;
	if(get_user_team(Vic) == get_user_team(Att))
		return;
		
	if(Vic == Att)
		return;
		
	if(GetAliveCount() < 5)
		return;
		
	pDamage[Att] += damage
		
	if(pDamage[Att] >= 1000)
	{
		pDamage[Att] = 0
		iXp[Att]++
		if( iXp[Att] >= rNxt_XP(Att) )
		{
			iPoints[Att]++
			iLvl[Att]++
			//iXp[Att] = 0
		}
	}
	
}

public client_death(Att,Vic,wpnindex,hitplace,TA)
{
	if(!is_user_connected(Att))
		return;
	if(!is_user_connected(Vic))
		return;
	if(get_user_team(Vic) == get_user_team(Att))
		return;
	if(Vic == Att)
		return;
	if(GetAliveCount() < get_pcvar_num(cvar_Count))
	{
		ColorChat(Att, GREEN, "[GC]^3 Minimum ^4players^3 to start gaining ^1XP^3 is^4 %d.^3 Currently:^4 %d",get_pcvar_num(cvar_Count),GetAliveCount())
		return;	
	}
	if(hitplace == HIT_HEAD)
		iXp[Att] += 2
	else
		iXp[Att]++

	iKills[Att]++
	if(get_pcvar_num(cvar_rank))
		iRankPoints[Att]++
	if( iXp[Att] >= rNxt_XP(Att) )
	{
		iPoints[Att]++
		iLvl[Att]++
		//iXp[Att] = 0
	}
	Save_Data(Att)
}

public fw_takedamage(victim, inflictor, attacker, Float:damage,bits)
{
	if(!is_user_connected(victim))
		return HAM_IGNORED;
		
	if(!is_user_connected(attacker))
		return HAM_IGNORED;	
		
	if(victim == attacker)
		return HAM_IGNORED;
	
	if( !(bits&DMG_BULLET) )
		return HAM_IGNORED;
		
	new Float:xtraD = 1.00 + iDamage[attacker]
	SetHamParamFloat(4, damage * xtraD )
	
	return HAM_IGNORED;

}	

public zp_fw_core_infect_post(id, Att)
{
	//set_task(1.2,"AddHP",id)
	if(Att == id || id == 0 || Att == 0 )
		return
	if(GetAliveCount() < get_pcvar_num(cvar_Count))
	{
		ColorChat(Att, GREEN, "[GC]^3 Minimum ^4players^3 to start gaining ^1XP^3 is^4 %d.^3 Currently:^4 %d",get_pcvar_num(cvar_Count),GetAliveCount())
		return;	
	}	
	iXp[Att] += 3
	iInfs[Att]++
	if(get_pcvar_num(cvar_rank))
		iRankPoints[Att] += 3
	if( iXp[Att] >= rNxt_XP(Att) )
	{
		iPoints[Att]++
		iLvl[Att]++
		//iXp[Att] = 0
	}
	Save_Data(Att)
}
	
public AddStats(id)
{
	if(!is_user_alive(id))
		return;
	if(zp_core_is_zombie(id))
		set_user_health(id, get_user_health(id) + ( iHealth[id] * 5) )
	else
	{
		set_user_health(id, get_user_health(id) + iHealth[id])
		cs_set_player_maxspeed_auto(id, (1.00 + iSpeed[id]) )
		set_user_gravity(id, (1.00  - iGravity[id]) )
	}
		
}
public AddStatsZM(id)
{
	if(!is_user_alive(id))
		return;
	if(zp_core_is_zombie(id))
		set_user_health(id, get_user_health(id) + ( iHealth[id] * 5) )
}

public iLvlShop(id)
{
	//iPoints[id] = 100
	new Txt[128]
	format(Txt,charsmax(Txt),"\wStat Points:\y %d \w^nDamage:\r %2.3f \w^nSpeed:\r %2.3f \w^nHealth:\r %d \w^nGravity:\r %2.3f \w^n^n",iPoints[id],(1.00 + iDamage[id]), (1.00 + iSpeed[id]),(100 + iHealth[id]), (1.00 - iGravity[id]))
	new Menu = menu_create(Txt, "MyMenuHandler")
	if(iPoints[id] >= 1)
	{
		menu_additem(Menu, "Add \y0.01\w Damage \y[1 Point]")
		menu_additem(Menu, "Add \y10\w Health \y[1 Point]")
		menu_additem(Menu, "Add \y0.01\w Speed  \y[1 Point]")
		menu_additem(Menu, "Add \y0.025\w Gravity  \y[1 Point]")
	}
	else
	{
		menu_additem(Menu, "\dAdd Damage [1 Point]")
		menu_additem(Menu, "\dAdd Health [1 Point]")
		menu_additem(Menu, "\dAdd Speed  [1 Point]")
		menu_additem(Menu, "\dAdd Gravity  [1 Point]")
	}
	menu_setprop( Menu, MPROP_EXIT, MEXIT_ALL );
	menu_display(id, Menu, 0)
}
	
public MyMenuHandler(id, Menu, item)
{
	if(iPoints[id] < 1)
	{
		ColorChat(id,GREEN, "[GC]^3 You don't have a point to raise any of your stats")
		return;
	}
	
	switch(item)
	{
		case 0:
		{
			if(iDamage[id] >= 0.149)
			{
				ColorChat(id,GREEN, "[GC]^3 You reached the ^4Max Damage^3. You can't raise it anymore")
				return;
			}
			iPoints[id]--
			iDamage[id] += 0.011
			ColorChat(id,GREEN, "[GC]^3 You have a increased your ^4Max Damage^3 by 0.01")
			if(iPoints[id] > 0)
				iLvlShop(id)
			Save_Data(id)
		}
		case 1:
		{
			if(iHealth[id] >= 400)
			{
				ColorChat(id,GREEN, "[GC]^3 You reached the ^4Max Health^3. You can't raise it anymore")
				return;
			}
			iPoints[id]--
			iHealth[id] += 10
			ColorChat(id,GREEN, "[GC]^3 You have a increased your ^4Max Health^3 by 10")
			if(iPoints[id] > 0)
				iLvlShop(id)
			Save_Data(id)
		}
		case 2:
		{
			if(iSpeed[id] >= 0.35)
			{
				ColorChat(id,GREEN, "[GC]^3 You reached the ^4Max Speed^3. You can't raise it anymore")
				return;
			}
			iPoints[id]--
			iSpeed[id] += 0.011
			ColorChat(id,GREEN, "[GC]^3 You have a increased your ^4Max Speed^3 by 0.01")
			if(iPoints[id] > 0)
				iLvlShop(id)
			Save_Data(id)
		}
		case 3:
		{
			if(iGravity[id] >= 0.750)
			{
				ColorChat(id,GREEN, "[GC]^3 You reached the ^4Max Gravity^3. You can't raise it anymore")
				return;
			}
			iPoints[id]--
			iGravity[id] += 0.025
			ColorChat(id,GREEN, "[GC]^3 You have a decreased your ^4Max Gravity^3 by 0.025")
			if(iPoints[id] > 0)
				iLvlShop(id)
			Save_Data(id)
		}
	}
	menu_destroy(Menu)
}
