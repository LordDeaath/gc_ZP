/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <colorchat>
#include <sqlx> 

#define PLUGIN "Tags"
#define VERSION "1.0"
#define AUTHOR "Lord. Death."
const TagMaxChar = 33
enum DataField {
    TagText[TagMaxChar]
}
new Tag[TagMaxChar][DataField]
new LoadedTag[TagMaxChar]
//  Mysql Information
new Host[]     = "62.108.35.183"
new User[]    = "bloodypro"
new Pass[]     = "uFk%0iPldv#$"
new Db[]     = "zp_stats"

new Handle:g_SqlTuple
new g_Error[512]
new bool:Loaded[33]
new Value[5], gUserTag[33][32]
public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_concmd("Enter_TAG", "SetChatTag")
	register_clcmd("say /settag", "SetPlayerTag")
	set_task(2.0,"MySql_Init") // set a task to activate the mysql_init
}

public plugin_natives()
	register_native("get_user_tag","native_get_user_tag")

public native_get_user_tag(plugin_id, num_params)
{
	new id = get_param(1)
	if(!id)
		return PLUGIN_CONTINUE
	set_string(2, Tag[id][TagText], get_param(3))
	return PLUGIN_HANDLED
	
}

public SetPlayerTag(id)
	client_cmd(id, "messagemode Enter_TAG")

bool:CheckTag(id)
{
	Value[0] = contain(gUserTag[id], "SELECT") // 0
	Value[1] = contain(gUserTag[id], "UPDATE") // 0
	Value[2] = contain(gUserTag[id], "DELETE") // 0
	Value[3] = contain(gUserTag[id], "WHERE") // 0
	Value[4] = contain(gUserTag[id], "INSERT") // 0
	
	for (new iNumber = 0; iNumber <= charsmax(Value); iNumber++)
	{
		if(Value[iNumber] != -1)
			return false;
	}
	return true;
}
	
public SetChatTag(id)
{
	new ChatTag[33];
	read_argv(1, ChatTag, charsmax(ChatTag))
	formatex(gUserTag[id], charsmax(gUserTag[]), ChatTag)
	if(!CheckTag(id))
	{
		ColorChat(id,GREEN,"Your Text contains some bad stuff, please try again")
		return;
	}
	formatex(Tag[id][TagText], charsmax(Tag[][TagText]), "%s ", ChatTag)
	ColorChat(id,GREEN,"You've set your tag to: %s", Tag[id][TagText])
	//Tag[id][TagText] =  psedoTag
	Save_MySql(id)
}

public MySql_Init()
{
	g_SqlTuple = SQL_MakeDbTuple(Host,User,Pass,Db)
   
	new ErrorCode,Handle:SqlConnection = SQL_Connect(g_SqlTuple,ErrorCode,g_Error,charsmax(g_Error))
	if(SqlConnection == Empty_Handle)
		set_fail_state(g_Error)
       
	new Handle:Queries
	Queries = SQL_PrepareQuery(SqlConnection,"CREATE TABLE IF NOT EXISTS tags_table (steamid varchar(32), nick varchar(32),tag varchar(32))")

	if(!SQL_Execute(Queries))
	{
		SQL_QueryError(Queries,g_Error,charsmax(g_Error))
		set_fail_state(g_Error)
	}
    
	SQL_FreeHandle(Queries)
   
	SQL_FreeHandle(SqlConnection)   
} 

public plugin_end()
	SQL_FreeHandle(g_SqlTuple)
	
public Load_MySql(id)
{
	new szSteamId[32], szTemp[512], iPlayerNick[32]
	get_user_authid(id, szSteamId, charsmax(szSteamId))
	get_user_name(id, iPlayerNick, charsmax(iPlayerNick))

	new Data[1]
	Data[0] = id
	format(szTemp,charsmax(szTemp),"SELECT * FROM `tags_table` WHERE (`tags_table`.`steamid` = '%s')", szSteamId)
	SQL_ThreadQuery(g_SqlTuple,"register_client",szTemp,Data,1)
}

public Save_MySql(id)
{	
	if(is_user_connected(id)&& Loaded[id])
	{
		new tempTag[32]
		formatex(tempTag, charsmax(tempTag), Tag[id][TagText])
		new szSteamId[32],iPlayerNick[32], szTemp[512]
		get_user_authid(id, szSteamId, charsmax(szSteamId))
		get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
		format(szTemp,charsmax(szTemp),"UPDATE `tags_table` SET `tag` = '%s' WHERE `tags_table`.`steamid` = '%s'", tempTag, szSteamId)
		SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
	}
} 

public register_client(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
{
	if(FailState == TQUERY_CONNECT_FAILED)
		log_amx("Load - Could not connect to SQL database.  [%d] %s", Errcode, Error)
	else if(FailState == TQUERY_QUERY_FAILED)
		log_amx("Load Query failed. [%d] %s", Errcode, Error)

	new id
	id = Data[0]
    
	if(SQL_NumResults(Query) < 1) 
	{
	//.if there are no results found
        
		new szSteamId[32], iPlayerNick[32]
		get_user_authid(id, szSteamId, charsmax(szSteamId)) // get user's steamid
		get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
		if (equal(szSteamId,"ID_PENDING"))
			return PLUGIN_HANDLED
           
		new szTemp[512]
        
		// now we will insturt the values into our table.
		format(szTemp,charsmax(szTemp),"INSERT INTO `tags_table` ( `steamid` , `nick` , `tag`) VALUES ('%s', '%s' ,'%s');", szSteamId, iPlayerNick, Tag[id][TagText])
		SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
	} 
	else 
	{
		SQL_ReadResult(Query, 2, LoadedTag, charsmax(LoadedTag))
		// if there are results found
		if(is_user_connected(id))
		{
			formatex(Tag[id][TagText], charsmax(Tag[][TagText]), LoadedTag)
			Loaded[id]=true;
		}
	}
	return PLUGIN_HANDLED
}

public client_putinserver(id)
	Load_MySql(id)
	
public client_disconnect(id)
{
	Save_MySql(id)		
	Loaded[id]=false;
}

public IgnoreHandle(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
{
    SQL_FreeHandle(Query)
    
    return PLUGIN_HANDLED
}