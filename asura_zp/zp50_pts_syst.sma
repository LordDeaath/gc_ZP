/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <sqlx> 
#include <zp50_gamemodes>
#include <zp50_log>
#include <zombieplague>

#define PLUGIN "Points Bank + Logger"
#define VERSION "1.2"
#define AUTHOR "Lord. Death."

//  Mysql Information
new Host[]     = "62.108.35.183"
new User[]    = "bloodypro"
new Pass[]     = "uFk%0iPldv#$"
new Db[]     = "zp_stats"

new Handle:g_SqlTuple
new g_Error[512]
new Saved_Points[33]
public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	//register_clcmd("say /save", "Save_MySql")
	//register_clcmd("say /load", "Load_MySql")
	//register_clcmd("say /loaded", "load_points")

	set_task(2.0,"MySql_Init") // set a task to activate the mysql_init
}
public plugin_natives()
{
	register_native("zp_points_get", "r_points", 1)
	register_native("zp_points_set", "s_points", 1)
	
}
public r_points(id) return Saved_Points[id];
public s_points(id, num) Saved_Points[id] = num;
public MySql_Init() 
{
    g_SqlTuple = SQL_MakeDbTuple(Host,User,Pass,Db)
   
    new ErrorCode,Handle:SqlConnection = SQL_Connect(g_SqlTuple,ErrorCode,g_Error,charsmax(g_Error))
    if(SqlConnection == Empty_Handle)
        set_fail_state(g_Error)
       
    new Handle:Queries
    Queries = SQL_PrepareQuery(SqlConnection,"CREATE TABLE IF NOT EXISTS points (steamid varchar(32), nick varchar(32),exp INT(11))")

    if(!SQL_Execute(Queries))
    {
        SQL_QueryError(Queries,g_Error,charsmax(g_Error))
        set_fail_state(g_Error)
       
    }
    
    SQL_FreeHandle(Queries)
   
    SQL_FreeHandle(SqlConnection)   
} 

public plugin_end()
{
    SQL_FreeHandle(g_SqlTuple)
} 

public Load_MySql(id)
{
    if(is_user_bot(id))
	return;
    new szSteamId[32], szTemp[512], iPlayerNick[32]
    get_user_authid(id, szSteamId, charsmax(szSteamId))
    get_user_name(id, iPlayerNick, charsmax(iPlayerNick))

    new Data[1]
    Data[0] = id
    new Text[124]
    format(Text, charsmax(Text), "[ %d ] Points Loaded for [ %s ] [ %s ] " , r_points(id) ,iPlayerNick, szSteamId)
    format(szTemp,charsmax(szTemp),"SELECT * FROM `points` WHERE (`points`.`steamid` = '%s')", szSteamId)
    SQL_ThreadQuery(g_SqlTuple,"register_client",szTemp,Data,1)
    ZP_PointsLog(Text)
   // client_print(0,print_chat,Text)
}

public register_client(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
{
    if(FailState == TQUERY_CONNECT_FAILED)
    {
        log_amx("Load - Could not connect to SQL database.  [%d] %s", Errcode, Error)
    }
    else if(FailState == TQUERY_QUERY_FAILED)
    {
        log_amx("Load Query failed. [%d] %s", Errcode, Error)
    }

    new id
    id = Data[0]
    
    if(SQL_NumResults(Query) < 1) 
    {
        //.if there are no results found
        
        new szSteamId[32], iPlayerNick[32]
        get_user_authid(id, szSteamId, charsmax(szSteamId)) // get user's steamid
        get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
        if (equal(szSteamId,"ID_PENDING"))
            return PLUGIN_HANDLED
            
        new szTemp[512]
        
        // now we will insturt the values into our table.
        format(szTemp,charsmax(szTemp),"INSERT INTO `points` ( `steamid` , `nick` , `exp`) VALUES ('%s', '%s' ,'0');", szSteamId, iPlayerNick)
        SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
    } 
    else 
    {
    
        // if there are results found
        Saved_Points[id] = SQL_ReadResult(Query, 2)
        //r_points(id, Saved_Points[id])
    }
    
    return PLUGIN_HANDLED
} 

public Save_MySql(id)
{
    if(is_user_bot(id))
	return;
    new szSteamId[32],iPlayerNick[32], szTemp[512]
    get_user_authid(id, szSteamId, charsmax(szSteamId))
    get_user_name(id, iPlayerNick, charsmax(iPlayerNick))
    new point = r_points(id)
    new Text[124]
    format(Text, charsmax(Text), "[ %d ] Points Saved for [ %s ] [ %s ] " , point,iPlayerNick, szSteamId)
    format(szTemp,charsmax(szTemp),"UPDATE `points` SET `exp` = '%i' WHERE `points`.`steamid` = '%s'", point, szSteamId)
    SQL_ThreadQuery(g_SqlTuple,"IgnoreHandle",szTemp)
    ZP_PointsLog(Text)
    //client_print(0,print_chat,Text)
} 

public client_putinserver(id) Load_MySql(id)
public client_disconnect(id) Save_MySql(id)
public zp_fw_gamemodes_end()
{
	new id
	for (id = 1; id <= get_maxplayers(); id++)
	{
	if(is_user_connected(id)) Save_MySql(id)
	}

}
public IgnoreHandle(FailState,Handle:Query,Error[],Errcode,Data[],DataSize)
{
    SQL_FreeHandle(Query)
    
    return PLUGIN_HANDLED
}
stock ZP_PointsLog(const message_fmt[], any:...)
{
	static message[256], filename[32], date[16];
	vformat(message, charsmax(message), message_fmt, 2);
	format_time(date, charsmax(date), "%Y%m%d");
	formatex(filename, charsmax(filename), "PointsLog_%s.log", date);
	log_to_file(filename, "%s", message);
}