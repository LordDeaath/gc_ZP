/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <fakemeta>
#include <fun>
#include <zp50_core>
#include <zp50_gamemodes>
#include <Colorchat>
#include <hamsandwich>

native zp_force_respawn(id);
native zp_respawn_task_remove(id);

#define PLUGIN "Spec Switch"
#define VERSION "0.1.3"
#define AUTHOR "many"

new g_msgid_ClCorpse, g_MsgDeathMsg;

new Trie:SpecTime;

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	/* Client Commands */
	register_clcmd("say /spec", 		"cmdSpec", ADMIN_ALL, "- go to spectator")
	register_clcmd("say_team /spec", 	"cmdSpec", ADMIN_ALL, "- go to spectator")
	register_clcmd("say /back", 		"cmdBack", ADMIN_ALL, "- go back to your team")
	register_clcmd("say_team /back", 	"cmdBack", ADMIN_ALL, "- go back to your team")
	
	g_MsgDeathMsg = get_user_msgid("DeathMsg")
	g_msgid_ClCorpse = get_user_msgid("ClCorpse")

	SpecTime = TrieCreate()
}

public plugin_end()
{
	TrieDestroy(SpecTime)
}


public plugin_natives()
{
	register_native("zp_transfer_spec","native_transfer_spec",1)
	register_native("zp_spec","cmdSpec",1)
	register_native("zp_back","cmdBack",1)
	register_native("zp_cant_respawn","native_cant_respawn",1)
}

public Float:native_cant_respawn(id)
{
	if(get_user_flags(id)&ADMIN_KICK)
		return 0.0;
	
	new authid[32]
	get_user_authid(id, authid, charsmax(authid))
	if(!TrieKeyExists(SpecTime,authid))
	{
		return 0.0;
	}

	new Float:spectime;
	TrieGetCell(SpecTime, authid, spectime)
	if(get_gametime()-spectime>60.0)
	{
		TrieDeleteKey(SpecTime, authid)
		return 0.0;
	}
	ColorChat(id, GREEN, "[GC]^1 You went to^3 Spectator^1 while being^3 Alive!")
	ColorChat(id, GREEN, "[GC]^1 You will be^3 Respawned^1 in^3 %.0f Seconds!",60.0-get_gametime()+spectime)
	return 60.0-get_gametime()+spectime;
}
public native_transfer_spec(id)
{	
	if(!SpecAllowed(id))
	{
		return false;
	}

	Spec(id)
	return true;
}

public cmdSpec(id)
{
	if(!SpecAllowed(id))
	{
		ColorChat(id, GREEN, "[GC]^3 You are not allowed to use^4 /spec^3 right now!")
		return PLUGIN_HANDLED;
	}
	
	if (cs_get_user_team(id) == CS_TEAM_SPECTATOR||cs_get_user_team(id) == CS_TEAM_UNASSIGNED)
	return PLUGIN_HANDLED;
	
	Spec(id)
	return PLUGIN_HANDLED;
}

public cmdBack(id)
{
	if(cs_get_user_team(id) == CS_TEAM_SPECTATOR||cs_get_user_team(id) == CS_TEAM_UNASSIGNED)
	{		
		zp_force_respawn(id)
		set_pdata_int(id, 125, get_pdata_int(id, 125, 5) &  ~(1<<8), 5)
		set_msg_block(get_user_msgid("VGUIMenu"),BLOCK_SET)
		engclient_cmd(id, "jointeam", "5")	
		engclient_cmd(id, "joinclass","5")	
		set_msg_block(get_user_msgid("VGUIMenu"),BLOCK_NOT)	
	}
	return PLUGIN_HANDLED;
}

public zp_fw_gamemodes_end()
{
	TrieClear(SpecTime);
}

bool:SpecAllowed(id)
{
	if(!is_user_alive(id))
		return true;
		
	new CsTeams:team;
	team = cs_get_user_team(id)
	for(new i = 1;i < 33;i++)
	{
		if(i==id) continue;
		if(!is_user_alive(i)) continue;
		if(cs_get_user_team(i)==team) return true;
	}
	return false;
}

public Spec(id)
{	
	if(get_user_flags(id) & ADMIN_KICK)
	{
		if(is_user_alive(id))
		{			
			set_msg_block(g_msgid_ClCorpse, BLOCK_ONCE)	
			set_pev(id, pev_health, 0.0);
			set_pev(id, pev_deadflag, DEAD_DEAD);	
		}	
		engclient_cmd(id, "jointeam", "6")						
		zp_respawn_task_remove(id)
		ColorChat(id,GREEN,"[GC]^03 Type ^04/back^03 to return from Spectator")
		return;
	}

	if(is_user_alive(id))
	{		
		set_pev(id, pev_health, 0.0);
		set_pev(id, pev_deadflag, DEAD_DEAD);		
		message_begin(MSG_BROADCAST, g_MsgDeathMsg)
		write_byte(id)
		write_byte(id)
		write_byte(0)
		write_string("world")
		message_end()

		new authid[32]
		get_user_authid(id,authid,charsmax(authid))
		TrieSetCell(SpecTime, authid, get_gametime())
	}
	
	engclient_cmd(id, "jointeam", "6")	
	zp_respawn_task_remove(id)
	ColorChat(id,GREEN,"[GC]^03 Type ^04/back^03 to return from Spectator")
	
	return;
}